{"ast":null,"code":"var _jsxFileName = \"/Users/boubou/Documents/projets/FORMATIONS/React/testReactApi/client/src/components/Pilotes/CreationPilote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport errorHelper from \"../../helpers/errorHelper\";\nimport { formConstants } from \"../../constants/formConstants\";\nimport { FormInput } from \"../Commons/FormInput/FormInput\";\nimport userActions from \"../../redux/actions/userActions\";\nimport { FormCheck } from \"../Commons/FormCheck/FormCheck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreationPilote() {\n  _s();\n\n  let navigate = useNavigate();\n  const dispatch = useDispatch(); //const [showMessage, setShowMessage] = useState({});\n\n  const [formErrors, setFormErrors] = useState({});\n  const [formValues, setFormValues] = useState({\n    nomPilote: \"\",\n    ecuriePilote: \"\",\n    anneeEnCours: 2021,\n    points: \"\",\n    nationalite: \"\"\n  });\n  const {\n    email,\n    password,\n    nomUser,\n    droitsCreation,\n    droitsEdition\n  } = formValues;\n  /**\n   * Fonction appelée à la validation du formulaire\n   * @param {*} values\n   */\n\n  const validateForm = values => {\n    let errors = {};\n\n    for (const [key, value] of Object.entries(values)) {\n      const droitsCreaOrEdit = key === formConstants.droitsCreation.nomChamp || key === formConstants.droitsEdition.nomChamp;\n\n      if (!value && !droitsCreaOrEdit) {\n        errors[key] = errorHelper.buildErrorFieldRequired(formConstants[key].libelleChamp);\n      }\n\n      const passwordOrConfirmPassword = key === formConstants.password.nomChamp || key === formConstants.cpassword.nomChamp;\n\n      if (passwordOrConfirmPassword && values.password !== values.cpassword) {\n        errors.password = \"Les deux mots de passe ne sont pas identiques\";\n        errors.cpassword = \"Les deux mots de passe ne sont pas identiques\";\n      } //email field\n\n\n      if (key === formConstants.email.nomChamp && !/\\S+@\\S+\\.\\S+/.test(values.email)) {\n        errors.email = errorHelper.buildErrorMessageFormat(formConstants[key].libelleChamp);\n      }\n    }\n\n    setFormErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const navToAccueil = () => navigate(\"/\");\n  /**\n   * Fonction appelée au clic sur le bouton de validation du formulaire\n   */\n\n\n  const send = () => {\n    // if (!email || email.length === 0) return;\n    // if (!password || password.length === 0 || password !== cpassword) return;\n    if (validateForm(formValues)) {\n      dispatch(userActions.createUser({\n        email,\n        password,\n        nomUser,\n        droitsCreation,\n        droitsEdition\n      }, navToAccueil));\n    }\n  };\n  /**\n   * Fonction appelée lors d'un changement sur un champ\n   * @param {*} event\n   */\n\n\n  const handleChange = event => {\n    setFormErrors({ ...formErrors,\n      [event.target.name]: \"\"\n    });\n    setFormValues({ ...formValues,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title-page\",\n      children: \"Cr\\xE9ation de pilote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        formField: formConstants[\"nomPilote\"],\n        type: \"nomPilote\",\n        value: formValues[\"nomPilote\"],\n        formErrors: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        formField: formConstants[\"password\"],\n        type: \"password\",\n        value: formValues[\"password\"],\n        formErrors: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        formField: formConstants[\"cpassword\"],\n        type: \"password\",\n        value: formValues[\"cpassword\"],\n        formErrors: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        formField: formConstants[\"nomUser\"],\n        type: \"text\",\n        value: formValues[\"nomUser\"],\n        formErrors: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"submit-button my-3\",\n      onClick: send,\n      type: \"submit\",\n      children: \"Inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreationPilote, \"ctPvYHX9bj7yJCrL34BPA3TI+Sw=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = CreationPilote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreationPilote\");","map":{"version":3,"sources":["/Users/boubou/Documents/projets/FORMATIONS/React/testReactApi/client/src/components/Pilotes/CreationPilote.js"],"names":["React","useState","Button","Form","useDispatch","useNavigate","errorHelper","formConstants","FormInput","userActions","FormCheck","CreationPilote","navigate","dispatch","formErrors","setFormErrors","formValues","setFormValues","nomPilote","ecuriePilote","anneeEnCours","points","nationalite","email","password","nomUser","droitsCreation","droitsEdition","validateForm","values","errors","key","value","Object","entries","droitsCreaOrEdit","nomChamp","buildErrorFieldRequired","libelleChamp","passwordOrConfirmPassword","cpassword","test","buildErrorMessageFormat","keys","length","navToAccueil","send","createUser","handleChange","event","target","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport errorHelper from \"../../helpers/errorHelper\";\nimport { formConstants } from \"../../constants/formConstants\";\nimport { FormInput } from \"../Commons/FormInput/FormInput\";\nimport userActions from \"../../redux/actions/userActions\";\nimport { FormCheck } from \"../Commons/FormCheck/FormCheck\";\n\nexport function CreationPilote() {\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  //const [showMessage, setShowMessage] = useState({});\n  const [formErrors, setFormErrors] = useState({});\n  const [formValues, setFormValues] = useState({\n    nomPilote: \"\",\n    ecuriePilote: \"\",\n    anneeEnCours: 2021,\n    points: \"\",\n    nationalite: \"\"\n  });\n\n  const {\n    email,\n    password,\n    nomUser,\n    droitsCreation,\n    droitsEdition\n  } = formValues;\n\n  /**\n   * Fonction appelée à la validation du formulaire\n   * @param {*} values\n   */\n  const validateForm = values => {\n    let errors = {};\n    for (const [key, value] of Object.entries(values)) {\n      const droitsCreaOrEdit =\n        key === formConstants.droitsCreation.nomChamp ||\n        key === formConstants.droitsEdition.nomChamp;\n\n      if (!value && !droitsCreaOrEdit) {\n        errors[key] = errorHelper.buildErrorFieldRequired(\n          formConstants[key].libelleChamp\n        );\n      }\n\n      const passwordOrConfirmPassword =\n        key === formConstants.password.nomChamp ||\n        key === formConstants.cpassword.nomChamp;\n      if (passwordOrConfirmPassword && values.password !== values.cpassword) {\n        errors.password = \"Les deux mots de passe ne sont pas identiques\";\n        errors.cpassword = \"Les deux mots de passe ne sont pas identiques\";\n      }\n\n      //email field\n      if (\n        key === formConstants.email.nomChamp &&\n        !/\\S+@\\S+\\.\\S+/.test(values.email)\n      ) {\n        errors.email = errorHelper.buildErrorMessageFormat(\n          formConstants[key].libelleChamp\n        );\n      }\n    }\n    setFormErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const navToAccueil = () => navigate(\"/\");\n\n  /**\n   * Fonction appelée au clic sur le bouton de validation du formulaire\n   */\n  const send = () => {\n    // if (!email || email.length === 0) return;\n    // if (!password || password.length === 0 || password !== cpassword) return;\n    if (validateForm(formValues)) {\n      dispatch(\n        userActions.createUser(\n          {\n            email,\n            password,\n            nomUser,\n            droitsCreation,\n            droitsEdition\n          },\n          navToAccueil\n        )\n      );\n    }\n  };\n\n  /**\n   * Fonction appelée lors d'un changement sur un champ\n   * @param {*} event\n   */\n  const handleChange = event => {\n    setFormErrors({ ...formErrors, [event.target.name]: \"\" });\n    setFormValues({\n      ...formValues,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <div className=\"Login\">\n      <h2 className=\"title-page\">Création de pilote</h2>\n      <Form>\n        <FormInput\n          handleChange={handleChange}\n          formField={formConstants[\"nomPilote\"]}\n          type=\"nomPilote\"\n          value={formValues[\"nomPilote\"]}\n          formErrors={formErrors}\n        />\n        <FormInput\n          handleChange={handleChange}\n          formField={formConstants[\"password\"]}\n          type=\"password\"\n          value={formValues[\"password\"]}\n          formErrors={formErrors}\n        />\n        <FormInput\n          handleChange={handleChange}\n          formField={formConstants[\"cpassword\"]}\n          type=\"password\"\n          value={formValues[\"cpassword\"]}\n          formErrors={formErrors}\n        />\n        <FormInput\n          handleChange={handleChange}\n          formField={formConstants[\"nomUser\"]}\n          type=\"text\"\n          value={formValues[\"nomUser\"]}\n          formErrors={formErrors}\n        />\n      </Form>\n      <Button className=\"submit-button my-3\" onClick={send} type=\"submit\">\n        Inscription\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}