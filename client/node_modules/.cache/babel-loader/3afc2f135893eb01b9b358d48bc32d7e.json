{"ast":null,"code":"var _jsxFileName = \"/Users/boubou/Documents/projets/FORMATIONS/React/testReactApi/client/src/components/Circuits/CreationCircuit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport errorHelper from \"../../helpers/errorHelper\";\nimport { formConstants } from \"../../constants/formConstants\";\nimport { FormInput } from \"../Commons/FormInput/FormInput\";\nimport circuitActions from \"../../redux/actions/circuitActions\";\nimport { generateArrayOfYears } from \"../../helpers/yearHelper\";\nimport { FormInputSelect } from \"../Commons/FormSelect/FormInputSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreationCircuit() {\n  _s();\n\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [formErrors, setFormErrors] = useState({});\n  const [formValues, setFormValues] = useState({\n    nomCircuit: \"\",\n    ecurieCircuit: \"\",\n    anneeEnCours: \"2021\",\n    points: \"\",\n    nationalite: \"\"\n  });\n  const [annees] = useState(generateArrayOfYears());\n  const {\n    nomCircuit,\n    ecurieCircuit,\n    anneeEnCours,\n    points,\n    nationalite\n  } = formValues;\n  /**\n   * Fonction appelée à la validation du formulaire\n   * @param {*} values\n   */\n\n  const validateForm = values => {\n    let errors = {};\n\n    for (const [key, value] of Object.entries(values)) {\n      if (!value) {\n        errors[key] = errorHelper.buildErrorFieldRequired(formConstants[key].libelleChamp);\n      }\n    }\n\n    setFormErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const navToCircuits = () => navigate(\"/circuits\");\n  /**\n   * Fonction appelée au clic sur le bouton de validation du formulaire\n   */\n\n\n  const send = () => {\n    if (validateForm(formValues)) {\n      dispatch(circuitActions.createCircuit({\n        nomCircuit,\n        ecurieCircuit,\n        anneeEnCours,\n        points,\n        nationalite\n      }, navToCircuits));\n    }\n  };\n  /**\n   * Fonction appelée lors d'un changement sur un champ\n   * @param {*} event\n   */\n\n\n  const handleChange = event => {\n    setFormErrors({ ...formErrors,\n      [event.target.name]: \"\"\n    });\n    setFormValues({ ...formValues,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title-page\",\n      children: \"Cr\\xE9ation de circuit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        formField: formConstants[\"nomCircuit\"],\n        type: \"text\",\n        value: formValues[\"nomCircuit\"],\n        formErrors: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        formField: formConstants[\"ecurieCircuit\"],\n        type: \"text\",\n        value: formValues[\"ecurieCircuit\"],\n        formErrors: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        formField: formConstants[\"nationalite\"],\n        type: \"text\",\n        value: formValues[\"nationalite\"],\n        formErrors: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInputSelect, {\n        handleChange: handleChange,\n        formField: formConstants[\"anneeEnCours\"],\n        options: annees,\n        value: formValues[\"anneeEnCours\"],\n        formErrors: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        formField: formConstants[\"points\"],\n        type: \"text\",\n        value: formValues[\"points\"],\n        formErrors: formErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"submit-button my-3\",\n      onClick: send,\n      type: \"submit\",\n      children: \"Inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreationCircuit, \"/cSDNJ0xJ85yJOK8hJb0G+rOj+I=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = CreationCircuit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreationCircuit\");","map":{"version":3,"sources":["/Users/boubou/Documents/projets/FORMATIONS/React/testReactApi/client/src/components/Circuits/CreationCircuit.js"],"names":["React","useState","Button","Form","useDispatch","useNavigate","errorHelper","formConstants","FormInput","circuitActions","generateArrayOfYears","FormInputSelect","CreationCircuit","navigate","dispatch","formErrors","setFormErrors","formValues","setFormValues","nomCircuit","ecurieCircuit","anneeEnCours","points","nationalite","annees","validateForm","values","errors","key","value","Object","entries","buildErrorFieldRequired","libelleChamp","keys","length","navToCircuits","send","createCircuit","handleChange","event","target","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport errorHelper from \"../../helpers/errorHelper\";\nimport { formConstants } from \"../../constants/formConstants\";\nimport { FormInput } from \"../Commons/FormInput/FormInput\";\nimport circuitActions from \"../../redux/actions/circuitActions\";\nimport { generateArrayOfYears } from \"../../helpers/yearHelper\";\nimport { FormInputSelect } from \"../Commons/FormSelect/FormInputSelect\";\n\nexport function CreationCircuit() {\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [formErrors, setFormErrors] = useState({});\n  const [formValues, setFormValues] = useState({\n    nomCircuit: \"\",\n    ecurieCircuit: \"\",\n    anneeEnCours: \"2021\",\n    points: \"\",\n    nationalite: \"\"\n  });\n  const [annees] = useState(generateArrayOfYears());\n\n  const {\n    nomCircuit,\n    ecurieCircuit,\n    anneeEnCours,\n    points,\n    nationalite\n  } = formValues;\n\n  /**\n   * Fonction appelée à la validation du formulaire\n   * @param {*} values\n   */\n  const validateForm = values => {\n    let errors = {};\n    for (const [key, value] of Object.entries(values)) {\n      if (!value) {\n        errors[key] = errorHelper.buildErrorFieldRequired(\n          formConstants[key].libelleChamp\n        );\n      }\n    }\n    setFormErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const navToCircuits = () => navigate(\"/circuits\");\n\n  /**\n   * Fonction appelée au clic sur le bouton de validation du formulaire\n   */\n  const send = () => {\n    if (validateForm(formValues)) {\n      dispatch(\n        circuitActions.createCircuit(\n          {\n            nomCircuit,\n            ecurieCircuit,\n            anneeEnCours,\n            points,\n            nationalite\n          },\n          navToCircuits\n        )\n      );\n    }\n  };\n\n  /**\n   * Fonction appelée lors d'un changement sur un champ\n   * @param {*} event\n   */\n  const handleChange = event => {\n    setFormErrors({ ...formErrors, [event.target.name]: \"\" });\n    setFormValues({\n      ...formValues,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <div className=\"Login\">\n      <h2 className=\"title-page\">Création de circuit</h2>\n      <Form>\n        <FormInput\n          handleChange={handleChange}\n          formField={formConstants[\"nomCircuit\"]}\n          type=\"text\"\n          value={formValues[\"nomCircuit\"]}\n          formErrors={formErrors}\n        />\n        <FormInput\n          handleChange={handleChange}\n          formField={formConstants[\"ecurieCircuit\"]}\n          type=\"text\"\n          value={formValues[\"ecurieCircuit\"]}\n          formErrors={formErrors}\n        />\n        <FormInput\n          handleChange={handleChange}\n          formField={formConstants[\"nationalite\"]}\n          type=\"text\"\n          value={formValues[\"nationalite\"]}\n          formErrors={formErrors}\n        />\n        <FormInputSelect\n          handleChange={handleChange}\n          formField={formConstants[\"anneeEnCours\"]}\n          options={annees}\n          value={formValues[\"anneeEnCours\"]}\n          formErrors={formErrors}\n        />\n        <FormInput\n          handleChange={handleChange}\n          formField={formConstants[\"points\"]}\n          type=\"text\"\n          value={formValues[\"points\"]}\n          formErrors={formErrors}\n        />\n      </Form>\n      <Button className=\"submit-button my-3\" onClick={send} type=\"submit\">\n        Inscription\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}