{"ast":null,"code":"var _jsxFileName = \"/Users/boubou/Documents/projets/projetBlog/client/src/components/Commons/Navigation/Navigation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button, ButtonGroup } from \"react-bootstrap\";\nimport logo from \"../../../logo.png\";\nimport userApi from \"../../../API/userApi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../../../redux/reducers/userReducer\";\nimport userActions from \"../../../redux/actions/userActions\";\nimport { commonConstants } from \"../../../constants/commonConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Navigation() {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userConnected = userApi.isAuth();\n  const currentUser = useSelector(getUser);\n  const idUser = localStorage.getItem(\"id\");\n  useEffect(() => {\n    idUser && dispatch(userActions.getUser({\n      idUser\n    }));\n  }, [idUser, dispatch]);\n  /**\n   * Gère le clic sur le bouton connexion si un user est déja connecté ou pas\n   */\n\n  const handleClickConnexion = async () => {\n    if (userConnected) {\n      userApi.logout();\n      dispatch(userActions.clearUser());\n      dispatch({\n        type: commonConstants.NOTIFICATION_HANDLING,\n        payload: {\n          data: {\n            text: \"Déconnexion réussie\"\n          },\n          status: 200\n        }\n      });\n      navigate(\"/\");\n    } else {\n      navigate(\"/login\");\n    }\n  };\n\n  const displayDashboardButton = userConnected && currentUser && (currentUser.droitsCreation || currentUser.droitsEdition);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Navigation\",\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      fixed: \"top\",\n      expand: \"lg\",\n      bg: \"light\",\n      variant: \"light\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"imageLogo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/\",\n            children: \"Accueil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/circuits\",\n            children: \"Circuits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          vertical: true,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"mb-2\",\n            variant: \"outline-dark\",\n            size: \"sm\",\n            onClick: handleClickConnexion,\n            children: userConnected ? \"Deconnexion\" : \"Se connecter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), !userConnected && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-dark\",\n            size: \"sm\",\n            onClick: () => navigate(\"/signup\"),\n            children: \"S'inscrire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), displayDashboardButton && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-dark\",\n            size: \"sm\",\n            onClick: () => navigate(\"/dashboard\"),\n            children: \"Acc\\xE9der au dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), currentUser && Object.keys(currentUser).length !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pl-4\",\n          children: `Bonjour ${currentUser.nomUser}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navigation, \"ho3oGyO2f8SIdhYS6W6moxXKkjQ=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/boubou/Documents/projets/projetBlog/client/src/components/Commons/Navigation/Navigation.js"],"names":["React","useEffect","Navbar","Nav","Container","Button","ButtonGroup","logo","userApi","useNavigate","useDispatch","useSelector","getUser","userActions","commonConstants","Navigation","navigate","dispatch","userConnected","isAuth","currentUser","idUser","localStorage","getItem","handleClickConnexion","logout","clearUser","type","NOTIFICATION_HANDLING","payload","data","text","status","displayDashboardButton","droitsCreation","droitsEdition","Object","keys","length","nomUser"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button, ButtonGroup } from \"react-bootstrap\";\nimport logo from \"../../../logo.png\";\nimport userApi from \"../../../API/userApi\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../../../redux/reducers/userReducer\";\nimport userActions from \"../../../redux/actions/userActions\";\nimport { commonConstants } from \"../../../constants/commonConstants\";\n\nexport function Navigation() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userConnected = userApi.isAuth();\n  const currentUser = useSelector(getUser);\n  const idUser = localStorage.getItem(\"id\");\n\n  useEffect(() => {\n    idUser && dispatch(userActions.getUser({ idUser }));\n  }, [idUser, dispatch]);\n  /**\n   * Gère le clic sur le bouton connexion si un user est déja connecté ou pas\n   */\n  const handleClickConnexion = async () => {\n    if (userConnected) {\n      userApi.logout();\n      dispatch(userActions.clearUser());\n      dispatch({\n        type: commonConstants.NOTIFICATION_HANDLING,\n        payload: {\n          data: {\n            text: \"Déconnexion réussie\"\n          },\n          status: 200\n        }\n      });\n      navigate(\"/\");\n    } else {\n      navigate(\"/login\");\n    }\n  };\n\n  const displayDashboardButton =\n    userConnected &&\n    currentUser &&\n    (currentUser.droitsCreation || currentUser.droitsEdition);\n  return (\n    <div className=\"Navigation\">\n      <Navbar fixed=\"top\" expand=\"lg\" bg=\"light\" variant=\"light\">\n        <Container>\n          <Navbar.Brand>\n            <img src={logo} className=\"imageLogo\" alt=\"logo\" />\n          </Navbar.Brand>\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"/\">Accueil</Nav.Link>\n            <Nav.Link href=\"/circuits\">Circuits</Nav.Link>\n          </Nav>\n          <ButtonGroup vertical>\n            <Button\n              className=\"mb-2\"\n              variant=\"outline-dark\"\n              size=\"sm\"\n              onClick={handleClickConnexion}\n            >\n              {userConnected ? \"Deconnexion\" : \"Se connecter\"}\n            </Button>\n            {!userConnected && (\n              <Button\n                variant=\"outline-dark\"\n                size=\"sm\"\n                onClick={() => navigate(\"/signup\")}\n              >\n                S'inscrire\n              </Button>\n            )}\n            {displayDashboardButton && (\n              <Button\n                variant=\"outline-dark\"\n                size=\"sm\"\n                onClick={() => navigate(\"/dashboard\")}\n              >\n                Accéder au dashboard\n              </Button>\n            )}\n          </ButtonGroup>\n          {currentUser && Object.keys(currentUser).length !== 0 && (\n            <p className=\"pl-4\">{`Bonjour ${currentUser.nomUser}`}</p>\n          )}\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}