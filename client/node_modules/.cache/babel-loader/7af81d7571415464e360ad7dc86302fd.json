{"ast":null,"code":"var _jsxFileName = \"/Users/boubou/Documents/projets/FORMATIONS/React/testReactApi/client/src/components/Circuits/Circuits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Container, Row, Col, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport circuitActions from \"../../redux/actions/circuitActions\";\nimport { getCircuits } from \"../../redux/reducers/circuitReducer\";\nimport { generateArrayOfYears } from \"../../helpers/yearHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Circuits() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [anneeEnCours, setAnneeEnCours] = useState(\"2021\");\n  const [annees] = useState(generateArrayOfYears());\n  const circuits = useSelector(getCircuits);\n\n  const handleChangeAnnee = event => setAnneeEnCours(event.target.value);\n\n  useEffect(() => {\n    dispatch(circuitActions.getCircuits({\n      anneeEnCours\n    }));\n  }, [dispatch, anneeEnCours]);\n\n  const onClickCreate = () => navigate(\"creer-circuit\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Circuits\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title-page\",\n      children: \"Circuits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            autoFocus: true,\n            name: \"anneeEnCours\",\n            value: anneeEnCours,\n            onChange: handleChangeAnnee,\n            children: annees.map((annee, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: annee.value,\n              children: annee.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 2,\n            offset: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            onClick: onClickCreate,\n            children: \"Cr\\xE9er un circuit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), circuits.map((circuit, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${circuit.nomCircuit} - ${circuit.pays}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Circuits, \"6WopG7gRZVQLCyjAYUaR/P8+BlI=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Circuits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Circuits\");","map":{"version":3,"sources":["/Users/boubou/Documents/projets/FORMATIONS/React/testReactApi/client/src/components/Circuits/Circuits.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Button","Container","Row","Col","Form","useNavigate","circuitActions","getCircuits","generateArrayOfYears","Circuits","dispatch","navigate","anneeEnCours","setAnneeEnCours","annees","circuits","handleChangeAnnee","event","target","value","onClickCreate","map","annee","index","label","span","offset","circuit","nomCircuit","pays"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,iBAAlD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,oBAAT,QAAqC,0BAArC;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,MAAD,CAAhD;AACA,QAAM,CAACiB,MAAD,IAAWjB,QAAQ,CAACW,oBAAoB,EAArB,CAAzB;AAEA,QAAMO,QAAQ,GAAGjB,WAAW,CAACS,WAAD,CAA5B;;AAEA,QAAMS,iBAAiB,GAAGC,KAAK,IAAIJ,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlD;;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACJ,cAAc,CAACC,WAAf,CAA2B;AAAEK,MAAAA;AAAF,KAA3B,CAAD,CAAR;AACD,GAFQ,EAEN,CAACF,QAAD,EAAWE,YAAX,CAFM,CAAT;;AAIA,QAAMQ,aAAa,GAAG,MAAMT,QAAQ,CAAC,eAAD,CAApC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,IAAD,CAAM,MAAN;AACE,YAAA,SAAS,MADX;AAEE,YAAA,IAAI,EAAC,cAFP;AAGE,YAAA,KAAK,EAAEC,YAHT;AAIE,YAAA,QAAQ,EAAEI,iBAJZ;AAAA,sBAMGF,MAAM,CAACO,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AAAoB,cAAA,KAAK,EAAED,KAAK,CAACH,KAAjC;AAAA,wBACGG,KAAK,CAACE;AADT,eAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,oBADD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEE,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,iBAAhB;AAAkC,YAAA,OAAO,EAAEN,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EA0BGL,QAAQ,CAACM,GAAT,CAAa,CAACM,OAAD,EAAUJ,KAAV,KAAoB;AAChC,0BACE;AAAA,+BACE;AAAA,oBAAK,GAAEI,OAAO,CAACC,UAAW,MAAKD,OAAO,CAACE,IAAK;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF,SAAUN,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANA,CA1BH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GApDed,Q;UACGV,W,EACAM,W,EAIAP,W;;;KANHW,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Container, Row, Col, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport circuitActions from \"../../redux/actions/circuitActions\";\nimport { getCircuits } from \"../../redux/reducers/circuitReducer\";\nimport { generateArrayOfYears } from \"../../helpers/yearHelper\";\n\nexport function Circuits() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [anneeEnCours, setAnneeEnCours] = useState(\"2021\");\n  const [annees] = useState(generateArrayOfYears());\n\n  const circuits = useSelector(getCircuits);\n\n  const handleChangeAnnee = event => setAnneeEnCours(event.target.value);\n\n  useEffect(() => {\n    dispatch(circuitActions.getCircuits({ anneeEnCours }));\n  }, [dispatch, anneeEnCours]);\n\n  const onClickCreate = () => navigate(\"creer-circuit\");\n\n  return (\n    <div className=\"Circuits\">\n      <h2 className=\"title-page\">Circuits</h2>\n      <Container>\n        <Row>\n          <Col md={2}>\n            <Form.Select\n              autoFocus\n              name=\"anneeEnCours\"\n              value={anneeEnCours}\n              onChange={handleChangeAnnee}\n            >\n              {annees.map((annee, index) => (\n                <option key={index} value={annee.value}>\n                  {annee.label}\n                </option>\n              ))}\n            </Form.Select>\n          </Col>\n          <Col md={{ span: 2, offset: 8 }}>\n            <Button variant=\"outline-primary\" onClick={onClickCreate}>\n              Cr√©er un circuit\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n\n      {circuits.map((circuit, index) => {\n        return (\n          <div key={index}>\n            <p>{`${circuit.nomCircuit} - ${circuit.pays}`}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}