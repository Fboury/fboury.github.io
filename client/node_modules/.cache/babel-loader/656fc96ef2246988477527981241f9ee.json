{"ast":null,"code":"import circuitApi from \"../../API/circuitApi\";\nimport { circuitConstants } from \"../../constants/circuitConstants\";\nimport { commonConstants } from \"../../constants/commonConstants\";\n\nconst createCircuit = (circuit, navigate) => dispatch => {\n  return circuitApi.createCircuit(circuit).then(res => {\n    dispatch({\n      type: circuitConstants.CREATE_CIRCUIT,\n      payload: res.data\n    });\n    dispatch({\n      type: commonConstants.NOTIFICATION_HANDLING,\n      payload: res\n    });\n    navigate();\n  }).catch(err => {\n    dispatch({\n      type: commonConstants.NOTIFICATION_HANDLING,\n      payload: err.response\n    });\n    console.log(\"test de l'erreur\", err.response);\n  });\n};\n\nconst getCircuits = anneeEnCours => dispatch => {\n  return circuitApi.getCircuits(anneeEnCours).then(res => {\n    dispatch({\n      type: circuitConstants.GET_CIRCUITS,\n      payload: res.data.circuits\n    });\n  }).catch(err => {\n    dispatch({\n      type: circuitConstants.GET_CIRCUITS,\n      payload: []\n    });\n    dispatch({\n      type: commonConstants.NOTIFICATION_HANDLING,\n      payload: err.response\n    });\n    console.log(\"test de l'erreur\", err.response);\n  });\n};\n\nconst circuitActions = {\n  createCircuit,\n  getCircuits\n};\nexport default circuitActions;","map":{"version":3,"sources":["/Users/boubou/Documents/projets/FORMATIONS/React/testReactApi/client/src/redux/actions/circuitActions.js"],"names":["circuitApi","circuitConstants","commonConstants","createCircuit","circuit","navigate","dispatch","then","res","type","CREATE_CIRCUIT","payload","data","NOTIFICATION_HANDLING","catch","err","response","console","log","getCircuits","anneeEnCours","GET_CIRCUITS","circuits","circuitActions"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,sBAAvB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,SAASC,eAAT,QAAgC,iCAAhC;;AAEA,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuBC,QAAQ,IAAI;AACvD,SAAON,UAAU,CACdG,aADI,CACUC,OADV,EAEJG,IAFI,CAECC,GAAG,IAAI;AACXF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,gBAAgB,CAACS,cAAzB;AAAyCC,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAAtD,KAAD,CAAR;AACAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,eAAe,CAACW,qBADf;AAEPF,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAIAH,IAAAA,QAAQ;AACT,GATI,EAUJS,KAVI,CAUEC,GAAG,IAAI;AACZT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,eAAe,CAACW,qBADf;AAEPF,MAAAA,OAAO,EAAEI,GAAG,CAACC;AAFN,KAAD,CAAR;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,GAAG,CAACC,QAApC;AACD,GAjBI,CAAP;AAkBD,CAnBD;;AAoBA,MAAMG,WAAW,GAAGC,YAAY,IAAId,QAAQ,IAAI;AAC9C,SAAON,UAAU,CACdmB,WADI,CACQC,YADR,EAEJb,IAFI,CAECC,GAAG,IAAI;AACXF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,gBAAgB,CAACoB,YADhB;AAEPV,MAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASU;AAFX,KAAD,CAAR;AAID,GAPI,EAQJR,KARI,CAQEC,GAAG,IAAI;AACZT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,gBAAgB,CAACoB,YADhB;AAEPV,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,eAAe,CAACW,qBADf;AAEPF,MAAAA,OAAO,EAAEI,GAAG,CAACC;AAFN,KAAD,CAAR;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,GAAG,CAACC,QAApC;AACD,GAnBI,CAAP;AAoBD,CArBD;;AAuBA,MAAMO,cAAc,GAAG;AACrBpB,EAAAA,aADqB;AAErBgB,EAAAA;AAFqB,CAAvB;AAIA,eAAeI,cAAf","sourcesContent":["import circuitApi from \"../../API/circuitApi\";\nimport { circuitConstants } from \"../../constants/circuitConstants\";\nimport { commonConstants } from \"../../constants/commonConstants\";\n\nconst createCircuit = (circuit, navigate) => dispatch => {\n  return circuitApi\n    .createCircuit(circuit)\n    .then(res => {\n      dispatch({ type: circuitConstants.CREATE_CIRCUIT, payload: res.data });\n      dispatch({\n        type: commonConstants.NOTIFICATION_HANDLING,\n        payload: res\n      });\n      navigate();\n    })\n    .catch(err => {\n      dispatch({\n        type: commonConstants.NOTIFICATION_HANDLING,\n        payload: err.response\n      });\n\n      console.log(\"test de l'erreur\", err.response);\n    });\n};\nconst getCircuits = anneeEnCours => dispatch => {\n  return circuitApi\n    .getCircuits(anneeEnCours)\n    .then(res => {\n      dispatch({\n        type: circuitConstants.GET_CIRCUITS,\n        payload: res.data.circuits\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: circuitConstants.GET_CIRCUITS,\n        payload: []\n      });\n      dispatch({\n        type: commonConstants.NOTIFICATION_HANDLING,\n        payload: err.response\n      });\n\n      console.log(\"test de l'erreur\", err.response);\n    });\n};\n\nconst circuitActions = {\n  createCircuit,\n  getCircuits\n};\nexport default circuitActions;\n"]},"metadata":{},"sourceType":"module"}